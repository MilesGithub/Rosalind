'''
Given two strings s and t of equal length, the Hamming distance between s and t, denoted dH(s,t), is the number of corresponding symbols that differ in s and t. See Figure 2.

Given: Two DNA strings s and t of equal length (not exceeding 1 kbp).
Return: The Hamming distance dH(s,t).
'''

def hamming_distance(s, t):
  
    distance = sum(c1 != c2 for c1, c2 in zip(s, t))
    return distance

string_s = "TCAAGAACAGTTGGTTGTAGACAGCTCGCCCACCTAGGTTATTTAGCTAGCTAATGAGAGAAAATTCACCCCTGATCAGAAGAGTAGTTAAGTGAGGACATCTCGCAACGCGATACTTTGTCGCGGGCGTCCAATCGGACACGGGCTGATTGATGCAGTGCACGATCTGTCTAGTGGTAAGCAGTACACAGCGATTGGAAGAGGTGTCGGGAAATTAGATTCTTTTCTGGACGCAACCCACTACTACTAGCGATGGTCTACCCTCTGCACCTGCATGCACACCTGTGTTTGGCTAGTTATAATAGTCCCACGTGAGTAGTTTGTGACGAGATCCCAATATCCCAACCGTGTTTCTCCGGACAGTGCTGGACCAACGACAACCAGCAATCCGTCGCACGCTGGTCAGCGCGAAGGCCACCCATTTACATTAAAGTAAGCGCAACGAGCCGCTACATTGTTTATGGGTAAAAGGGTACAGAGTACATCGATTCAAACAGAATGACACAATATTGGGAACATGGGCTGAAGCTAAATGTGATATGTCCACAATGGTGCAAAATTAGTCGTTAGAGCGGTAGATATCCACCCAACGACGAGTGCAGATATCCACCAGTAGGCAGACTTCGGACCCGGTCGCTAAGCCGGGCGTTGAGGAAGTACGCAGCAGCAGATGTGGGTTGACGCTATCATAACAGACGTAGAACGCAATGCTTTCTTGGTTGCTGTGAGTCAAGAGCACAAAGTGAAAGAGTACTCCCATCAATTTGCATGATTGCAGTAGCGTACCACATTCACCGCGCCTTTAGATATGACAGCGCCGCATACAACCGCGTTAGGAGCCAAGGTCAGCTGTTCCTTCTCCAAATGACCCAGCCCTTTGGAGTGTTCTGCGCAAGGCTCGTGCTGGTTGACGCACGCGAATCTTGGC"
string_t = "TCCAGATCAGTTGAGACTCAACTGGACGCCCCACTTGCCTCCTCTCACTGCTTCTAGGATCAAACTGACCGTACATCACAGTATAACCTGCAGAACCCCATGCGACTCCGCGGGAACTGTGGGCGTGCGCCAGTTCGGAGTATTGAGAAATTAAGCAGGGCGCGACAAGTCCTTCGGCCCTCAGGGAAACGCCCAGGGAATTCCTGCTGAGGTAACTGAGTGATTGATGGACCGAAGCCTCACCGGATAGCCAACGCCCCGATATTGCGGATGCACTGACGCCAACTAGCGGATGGCTCCAATAAGCCTACGCCCTTAATTTGTGGGGAGTTACCCACTACCCATCCGAGACGCTCGGAATGCTCCCGGACCTCCGCAAGTACTTAATCCTTCGGCCCGCCGTCAGGGTCGAGGCGACTCAAGTCCAGGGGTCTCACCAAAGCGGGCCCAGTCCCCGTCTCTTGGTTGTAGGATACCGTAAGCATCATTTATAAAAGTGTGTCCGAAGATGTCGCCCAGCTTCTGAAGATACATTAGATACCACGACAATGATGCGCGAGTGGTGCCTAGTCCATTAAATATGACAACAACCGGGAGTCTTAGAATGCCTCAGCAGTACGCCTTCTCACCCGTTGCGGACGCTGGGCGCGTAGCTTGTGCGCACCAGAAGATGACGAGAAACTCTATTTTCGCAAAGTGATAGTACAATGGCTCGTGGTTTGAAGTTAGCAAGATACACAAACTTAGCTAGAACTCGCATCCCTATAAATCATATATCTGGGGTAATAGAGACCACTATGTCATAGGCCAGACAAGCACGTATTTACTCGCGACTAGATATGAGCTAGACGACGCCCTCTCCTTCTCCGAGACACCTGTGGAGCGGACCGAACAGCGCTTGAACGATTACACAGGCGCTAATGTTGAG"

distance = hamming_distance(string_s, string_t)
print(f"{distance}")

